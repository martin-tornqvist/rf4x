// TODO: There is probably a better way to do this(?)
#[cfg(unix)]
pub mod ncurses;
#[cfg(unix)]
pub use ncurses::io;

mod utils;
mod mon;
mod map;
mod render;

use utils::*;
use mon::*;
use map::*;
use render::*;

fn main()
{
    println!("main()");

    io::init();

    let mut game_map = Map::new();

    for x in 1..MAP_W - 1 {
        for y in 1..MAP_H - 1 {
            game_map.ter[x][y] = Ter::Floor;
        }
    }

    game_map.ter[18][3] = Ter::Wall;

    let player = Mon::new(&P::new_xy(2, 4));

    game_map.monsters.push(player);

    let player_idx = 0;

    io::clear_scr();

    // ------------------------------------------------------------------------
    // Game loop
    // ------------------------------------------------------------------------
    loop {
        // let scr_dim = io::scr_dim();

        let player_p = *game_map.monsters[player_idx].p();

        let vp_dim = P::new_xy(80, 22);

        let mut vp = R::new();

        let trigger_dist = 2;

        vp_update(&player_p, &vp_dim /* &scr_dim */, trigger_dist, &mut vp);

        // R::new(&P::new(), &scr_dim);

        draw_map(&game_map, &vp);

        // io::draw_text(&P { x: 1, y: 1 },
        // &format!("Some number: {}", 42),
        // io::Clr::White,
        // io::Clr::Black,
        // io::FONT_BOLD);
        //

        let player = &mut game_map.monsters[player_idx];

        let inp = io::get_input();

        match inp {
            ('q', 0) => {
                break;
            }

            ('6', 0) | ('\n', io::KEY_RIGHT) => {
                player.mv(Dir::Right);
            }

            ('4', 0) | ('\n', io::KEY_LEFT) => {
                player.mv(Dir::Left);
            }

            ('2', 0) | ('\n', io::KEY_DOWN) => {
                player.mv(Dir::Down);
            }

            ('8', 0) | ('\n', io::KEY_UP) => {
                player.mv(Dir::Up);
            }

            ('3', 0) => {
                player.mv(Dir::DownRight);
            }

            ('9', 0) => {
                player.mv(Dir::UpRight);
            }

            ('1', 0) => {
                player.mv(Dir::DownLeft);
            }

            ('7', 0) => {
                player.mv(Dir::UpLeft);
            }

            _ => {}
        }
    }

    io::cleanup();

    println!("main() [DONE]");
}
